name: Destroy Branch
run-name: Destroy Branch

on:
  delete:
    branches:
      - '!main'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION_FILE: '.nvmrc'

jobs:
  destroyBranchAWS:
    name: Destroy Branch AWS Resources
    runs-on: ubuntu-latest
    outputs:
      SOURCE_BRANCH: ${{ github.event.ref }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js version in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: Node Cache
        id: node-cache
        uses: actions/cache@v3
        env:
          cache-name: node-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: CDK Cache
        id: cdk-cache
        uses: actions/cache@v3
        env:
          cache-name: cdk-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      - name: Destroy AWS
        id: destroy-aws
        working-directory: .github/cdk/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BRANCH: ${{ github.event.ref }}
        run: |
          echo "branch: $BRANCH"
          echo "SOURCE_BRANCH=$BRANCH" >> $GITHUB_OUTPUT

          cdk --require-approval never destroy --force --context scope=branch --context branch=$BRANCH
        # npm run destroy
  removeSiteFiles:
    name: Remove Site Files
    runs-on: ubuntu-latest
    needs: destroyBranchAWS
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js version in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: Node Cache
        id: node-cache
        uses: actions/cache@v3
        env:
          cache-name: node-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: Get Bucket Name
        id: bucket-name
        uses: actions/github-script@v6
        env:
          S3_BUCKET_BASE: ${{ vars.S3_BUCKET_BASE }}
          BRANCH: ${{ github.ref }}
        with:
          result-encoding: string
          script: |
            const { S3_BUCKET_BASE, BRANCH } = process.env
            console.log('S3_BUCKET_BASE:', S3_BUCKET_BASE);

            console.log('branch:', BRANCH);
            const bucketName = `${ S3_BUCKET_BASE }-${ BRANCH === 'main' ? 'prod' : 'dev' }`

            console.log('bucketName:', bucketName);

            return bucketName;
      - name: Remove Files
        id: remove-files
        working-directory: './'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BRANCH: ${{ needs.destroyBranchAWS.outputs.SOURCE_BRANCH }}
          S3_BUCKET: ${{ steps.bucket-name.outputs.result }}
        run: |
          echo "BRANCH: $BRANCH"
          echo "S3_BUCKET: $S3_BUCKET"

          aws s3 sync out/ $S3_BUCKET/branches/$BRANCH --delete
        # npm run remove
