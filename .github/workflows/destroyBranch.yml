name: Destroy Branch
run-name: Destroy Branch

on:
  delete:
    branches:
      - '!main'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION_FILE: '.nvmrc'

  #
  #   STEPS FOR DESTROY BRANCH STACKS JOB
  #
  #   - checkout-repo
  #   - set-node-version
  #   - node-cache
  #   - install-dependencies
  #   - destroy-branch-stack
  #
  #   STEPS FOR REMOVE SITE FILES JOB
  #
  #   - checkout-repo
  #   - set-node-version
  #   - node-cache
  #   - install-dependencies
  #   - destroy-branch-stack
  #   - bucket-name
  #   - remove-files
  #

jobs:
  DestroyBranchStack:
    name: Destroy Branch Stack on AWS
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # outputs:
    #   SOURCE_BRANCH: ${{ github.event.ref }}
    steps:
      - name: Checkout Repo
        id: checkout-repo
        uses: actions/checkout@v3

      - name: Use Node.js version in .nvmrc
        id: set-node-version
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'

      - name: Node Cache
        id: node-cache
        uses: actions/cache@v3
        env:
          cache-name: node-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-

      - name: Install Dependencies
        id: install-dependencies
        run: npm ci --ignore-scripts

      - name: Destroy AWS
        id: destroy-branch-stack
        env:
          BRANCH: ${{ github.event.ref }}
        run: |
          echo "branch: $BRANCH"
          echo "SOURCE_BRANCH=$BRANCH" >> $GITHUB_OUTPUT

          npm run destroy -w cdk

      - name: Get Bucket Name
        id: bucket-name
        uses: actions/github-script@v6
        env:
          S3_BUCKET_BASE: ${{ vars.S3_BUCKET_BASE }}
          BRANCH: ${{ github.ref }}
        with:
          result-encoding: string
          script: |
            const { S3_BUCKET_BASE, BRANCH } = process.env
            console.log('S3_BUCKET_BASE:', S3_BUCKET_BASE);
            console.log('branch:', BRANCH);

            const bucketName = `${ S3_BUCKET_BASE }-${ BRANCH === 'main' ? 'prod' : 'dev' }`
            console.log('bucketName:', bucketName);

            return bucketName;

      - name: Remove Files
        id: remove-files
        working-directory: './'
        env:
          BRANCH: ${{ github.ref }}
          S3_BUCKET: ${{ steps.bucket-name.outputs.result }}
        run: |
          echo "BRANCH: $BRANCH"
          echo "S3_BUCKET: $S3_BUCKET"

          aws s3 rm --recursive $S3_BUCKET/branches/$BRANCH

  # RemoveSiteFiles:
  #   name: Remove Site Files
  #   runs-on: ubuntu-latest
  #   needs: [DestroyBranchStack]
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #     - name: Checkout Repo
  #       id: checkout-repo
  #       uses: actions/checkout@v3
  #     - name: Use Node.js version in .nvmrc
  #       id: set-node-version
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: ${{ env.NODE_VERSION_FILE }}
  #         cache: 'npm'
  #     - name: Node Cache
  #       id: node-cache
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: node-cache
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ github.repository }}-${{ env.cache-name }}-
  #           ${{ github.repository }}-

  #     # NO NPM INSTALL HERE??? IS IT NEEDED FOR AWS-ONLY JOBS?
  #     - name: Get Bucket Name
  #       id: bucket-name
  #       uses: actions/github-script@v6
  #       env:
  #         S3_BUCKET_BASE: ${{ vars.S3_BUCKET_BASE }}
  #         BRANCH: ${{ github.ref }}
  #       with:
  #         result-encoding: string
  #         script: |
  #           const { S3_BUCKET_BASE, BRANCH } = process.env
  #           console.log('S3_BUCKET_BASE:', S3_BUCKET_BASE);

  #           console.log('branch:', BRANCH);
  #           const bucketName = `${ S3_BUCKET_BASE }-${ BRANCH === 'main' ? 'prod' : 'dev' }`

  #           console.log('bucketName:', bucketName);

  #           return bucketName;
  #     - name: Remove Files
  #       id: remove-files
  #       working-directory: './'
  #       env:
  #         BRANCH: ${{ needs.DestroyBranchStack.outputs.SOURCE_BRANCH }}
  #         S3_BUCKET: ${{ steps.bucket-name.outputs.result }}
  #       run: |
  #         echo "BRANCH: $BRANCH"
  #         echo "S3_BUCKET: $S3_BUCKET"

  #         aws s3 rm --recursive $S3_BUCKET/branches/$BRANCH
