name: Build and Deploy
run-name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  # Allows external webhook trigger with "event_type" = "publish-event"
  repository_dispatch:
    types: [publish-event]

env:
  NODE_VERSION_FILE: '.nvmrc'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js version specified in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: Project Cache
        id: cache-project
        uses: actions/cache@v3
        env:
          cache-name: project-cache
        with:
          path: |
            ~/.npm
          # Generate a new cache whenever packages or source files change.
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-

      # - name: Cache node modules
      #   id: cache-npm
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ github.repository }}-${{ env.cache-name }}-
      #       ${{ github.repository }}-
      - name: Nextjs Build Cache
        id: cache-next
        env:
          cache-name: next-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: CI install
        run: npm ci --ignore-scripts
      - name: Build and Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          DISTRIBUTION_ID: ${{secrets.DISTRIBUTION_ID}}
          NEXT_PUBLIC_API_ENDPOINT: https://graphql.contentful.com/content/v1/spaces/${{secrets.CONTENTFUL_SPACE_ID}}/
          NEXT_PUBLIC_CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          S3_BUCKET: ${{secrets.S3_BUCKET}}
        run: npm run deploy
