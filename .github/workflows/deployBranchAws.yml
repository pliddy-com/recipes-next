name: Deploy Branch AWS Resources
run-name: Deploy Branch AWS Resources

on:
  create:
    branches:
      - '!main'
  workflow_dispatch:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION_FILE: '.nvmrc'

jobs:
  deployStack:
    if: github.event.ref_type == 'branch' && github.event.ref != 'main'
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Use Node.js version in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: CDK Cache
        id: cdk-cache
        uses: actions/cache@v3
        env:
          cache-name: cdk-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: Install Dependencies
        run: cd .github/cdk && npm ci --ignore-scripts
      - name: Deploy Branch-specific Stack for ${{github.event.ref}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd .github/cdk && npm run deploy

        # TODO: create deploy using aws-sdk to lookup value & pass down
      - name: Branch Label
        id: branch-label
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.event.ref }}
      - name: Stack Label Branch
        id: stack-label-branch
        uses: mad9000/actions-find-and-replace-string@3
        with:
          source: ${{ steps.branch-label.outputs.capitalized }}
          find: '-'
          replaceAll: ''
      - name: Get CDK Output Values
        id: cdk-outputs
        uses: RadovanPelka/github-action-json@main
        with:
          path: '.github/cdk/cdk-outputs.json'
      - name: Get Stack Label
        id: stack-label
        uses: michpohl/action-concatenate-strings@v1.0.1
        with:
          first: 'RecipesBranchStack'
          second: ${{ steps.branch-label.outputs.capitalized }}
          output-var-name: 'STACK_LABEL'
      - name: Get Distribution Label
        id: distribution-label
        uses: michpohl/action-concatenate-strings@v1.0.1
        with:
          first: 'ExportRecipesDistribution'
          second: ${{ steps.stack-label-branch.outputs.value }}
          output-var-name: 'DISTRIBUTION_LABEL'
      - name: Test Outputs
        run: |
          echo "stackLabel: $STACK_LABEL"
          echo "distributionLabel: $DISTRIBUTION_LABEL"

      # - name: Get CDK Outputs
      #   id: cdk-outputs
      #   # handle multi-line json
      #   run: |
      #     content=`cd .github/cdk && cat ./cdk-outputs.json`
      #     echo "{cdkOutputs}={$content}" >> $GITHUB_OUTPUT
      # - name: Set Distribution Id
      #   id: distribution-id
      #   env:
      #     BRANCH_LABEL: ${{ steps.branch-label.outputs.capitalized }}
      #     STACK_LABEL: 'ExportRecipesDistribution${{steps.branch-label.outputs.capitalized}}'
      #   # STACK_LABEL: ${{format('ExportRecipesDistribution{0}', $BRANCH_LABEL)}}
      #   # DISTRIBUTION_LABEL: 'ExportRecipesDistribution && ${{ env.STACK_LABEL }}'
      #   # DISTRIBUTION_LABEL: 'ExportRecipesDistribution${{ env.STACK_LABEL }}'
      #   # DISTRIBUTION_ID: ${{ steps.cdk-outputs.outputs[env.DISTRIBUTION_LABEL][env.STACK_LABEL] }}
      #   run: |
      #     echo "STACK_LABEL: $STACK_LABEL"

      #   # echo "stack outputs: ${{ steps.cdk-outputs.outputs[STACK_LABEL] }}"

      #   # NEXT STEP: get branch label without dashes for property
      #   # echo "distributionLabel: $DISTRIBUTION_LABEL"
      #   # echo "distribution id: $DISTRIBUTION_ID"

      # # json=${{ fromJSON(${{ content }}) }}

      # # echo "json: ${json}}"

      # # stackLabel = "RecipesBranchStack$BRANCH_LABEL-deploy-branch"
      # # resourceLabel = "ExportRecipesDistribution$BRANCH_LABEL"

      # # echo "stackLabel: ${stackLabel}"
      # # echo "resourceLabel: ${resourceLabel}"

      # # distributionId = ${json[stackLabel][resourceLabel]}

      # # echo "distributionId: ${distributionId}"

      # # echo "{distributionId}={$distributionId}" >> $GITHUB_OUTPUT

      # # echo "cdk outputs: ${fromJson(steps.cdk-outputs.outputs.cdkOutputs).ExportRecipesBranchStack087-deploy-shared}"

      # #     echo "steps.branch-label.outputs.capitalized: ${{ steps.branch-label.outputs.capitalized }}"

      # # echo "{distributionId}={$DISTRIBUTION_ID}" >> $GITHUB_OUTPUT

      # # echo "CDK_OUTPUTS: ${{ CDK_OUTPUTS }}"

      # # distributionId="${{ cdkOutputs }}.${{ outputId }}"

      # # echo "distributionId: ${{ distributionId }}"

      # # - name: Deploy Site Content
      # #   id: deploy-site-content
      # #   env:
      # #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # #     DISTRIBUTION_ID: ${{steps.distribution-id.distributionId}}
      # #     S3_BUCKET: recipes.pliddy.com-dev # update based on branch name
      # #   run: |
      # #     npm run deploy
