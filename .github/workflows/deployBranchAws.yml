name: Deploy Branch AWS Resources
run-name: Deploy Branch AWS Resources

on:
  create:
    branches:
      - '!main'
  workflow_dispatch:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION_FILE: '.nvmrc'

jobs:
  deployStack:
    if: github.event.ref_type == 'branch' && github.event.ref != 'main'
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Use Node.js version in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: CDK Cache
        id: cdk-cache
        uses: actions/cache@v3
        env:
          cache-name: cdk-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: Install Dependencies
        run: cd .github/cdk && npm ci --ignore-scripts
      - name: Deploy Branch-specific Stack for ${{github.event.ref}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd .github/cdk && npm run deploy
      - name: Get CDK Outputs
        id: cdk-outputs
        # handle multi-line json
        run: |
          content=`cd .github/cdk && cat ./cdk-outputs.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "{cdkOutputs}={$content}" >> $GITHUB_OUTPUT
      - name: Branch Label
        id: branch-label
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.event.ref }}
      # - name: Set Branch Label
      #   id: branch-label
      #   run: |
      #     echo "steps.branch-label-setup.outputs.capitalized: ${{ steps.branch-label-setup.outputs.capitalized }}"
      #     echo "{branchLabel}={$steps.branch-label-setup.outputs.capitalized}" >> $GITHUB_OUTPUT
      - name: Set Distribution Id
        id: distribution-id
        run: |
          echo "branch: ${{ github.event.ref }}"

          echo "steps.branch-label.outputs.capitalized: ${{ steps.branch-label.outputs.capitalized }}"

          outputId="RecipesBranchStack${{ steps.branch-label.outputs.capitalized }}"

          echo "outputId: ${{ outputId }}"

          echo "{outputId}={$outputId}" >> $GITHUB_OUTPUT

          cdkOutputs=${{ fromJson(steps.cdk-outputs.outputs.cdkOutputs) }}

          echo "cdkOutputs: ${{ cdkOutputs }}"

          distributionId="${{ cdkOutputs }}.${{ outputId }}"

          echo "distributionId: ${{ distributionId }}"

          echo "{distributionId}={$distributionId}" >> $GITHUB_OUTPUT

      # - name: Deploy Site Content
      #   id: deploy-site-content
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      #     DISTRIBUTION_ID: ${{steps.distribution-id.distributionId}}
      #     S3_BUCKET: recipes.pliddy.com-dev # update based on branch name
      #   run: |
      #     npm run deploy
