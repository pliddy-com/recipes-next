name: Deploy Branch AWS Resources
run-name: Deploy Branch AWS Resources

on:
  push:
  create:
    branches:
      - '!main'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION_FILE: '.nvmrc'

jobs:
  deployStack:
    # if: github.event.ref_type == 'branch'
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Use Node.js version in .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'npm'
      - name: CDK Cache
        id: cdk-cache
        uses: actions/cache@v3
        env:
          cache-name: cdk-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ github.repository }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.repository }}-${{ env.cache-name }}-
            ${{ github.repository }}-
      - name: Install Dependencies
        run: cd .github/cdk && npm ci --ignore-scripts
      - name: Deploy Branch-specific Stack for ${{github.event.ref}}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: cd .github/cdk && npm run deploy
      - name: Get CDK Outputs
        id: cdk-outputs
        # handle multi-line json
        run: |
          content=`cd .github/cdk && cat ./cdk-outputs.json`
          content="${content//$'\n'/''}"
          content="${content//$'\r'/''}"
          content="${content//$'\s+'/''}"

          echo "CDK_OUTPUTS: ${content}"
          echo "{CDK_OUTPUTS}={$content}" >> $GITHUB_ENV

        # content="${content//'%'/'%25'}"
      - name: Test Outputs
        uses: actions/github-script@v6
        env:
          cdkOutputs: ${{ steps.cdk-outputs.outputs.cdkOutputs }}
        with:
          script: |
            console.log('context.ref:', context.ref);

            console.log('process.env:', process.env);

            const { CDK_OUTPUTS } = process.env;
            console.log('CDK_OUTPUTS:', CDK_OUTPUTS);

            const { ref } = context;

            const refArray = ref.split('/');
            const branch = refArray[refArray.length - 1];
            console.log('branch:', branch);

            const branchLabel = branch && branch[0].toUpperCase() + branch.slice(1);
            console.log('branchLabel:', branchLabel);

            const branchSlug = branchLabel.replaceAll('-', '');
            console.log('branchSlug:', branchSlug);

            const stackLabel = `RecipesBranchStack${branchLabel}`
            console.log('stackLabel:', stackLabel);

            const distributionLabel = `ExportRecipesDistribution${branchSlug}`
            console.log('distributionLabel:', distributionLabel);

          # console.log('cdkOutputs:', cdkOutputs);

        # run: |
        #   echo "stackLabel: $STACK_LABEL"
        #   echo "distributionLabel: $DISTRIBUTION_LABEL"
        #   echo "cdk outputs: ${{ steps.cdk-outputs.outputs}}"

        #   echo "cdk outputs (RecipesBranchStack088-deploy-branch.ExportRecipesDistribution088deploybranch): ${{ toJSON(steps.cdk-outputs.outputs.RecipesBranchStack088-deploy-branch.ExportRecipesDistribution088deploybranch) }}"
        #   echo "DISTRIBUTION_ID: $DISTRIBUTION_ID"

        # echo "distributionId: ${{ steps.cdk-outputs.outputs.  .cdkOutputs[$STACK_LABEL][$DISTRIBUTION_LABEL] }}"

      # # - name: Deploy Site Content
      # #   id: deploy-site-content
      # #   env:
      # #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # #     DISTRIBUTION_ID: ${{steps.distribution-id.distributionId}}
      # #     S3_BUCKET: recipes.pliddy.com-dev # update based on branch name
      # #   run: |
      # #     npm run deploy
