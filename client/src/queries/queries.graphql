# query for Taxonomy with Category & Subcategory levels
# getNavTaxonomy

query navMenuData {
  categories: taxonomyCollection(
    where: { slug: "categories" }
    order: title_ASC
    limit: 1
  ) {
    ...NavTaxonomy
  }

  cuisine: taxonomyCollection(
    where: { slug: "cuisine" }
    order: title_ASC
    limit: 1
  ) {
    ...NavTaxonomy
  }

  tags: tagCollection(order: title_ASC) {
    ...TagTaxonomy
  }
}

# Query for recipe slugs
# getRecipeSlugs

query recipeSlugs($where: RecipeFilter) {
  recipeCollection(where: $where, order: title_ASC) {
    __typename
    items {
      ...RecipeSlug
    }
  }
}

# query for category slugs
# getTagSlugs

query tagSlugs($where: TagFilter) {
  tagCollection(where: $where, order: title_ASC) {
    ...TagTaxonomy
  }
}

# query for lists of linked entries for tags and images
# getLinkedEntries

query linkedEntries {
  tags: tagCollection(order: title_ASC) {
    items {
      ...TagDefault
    }
  }
  images: assetCollection(order: fileName_ASC) {
    items {
      ...ImageDefault
    }
  }
}

# Query for List Page RecipeCollection (all recipes matching tag)
# getRecipeList

query recipeList($where: TagFilter) {
  __typename
  tagCollection(where: $where, order: title_ASC, limit: 1) {
    __typename
    total
    items {
      ...ListPageItem
    }
  }
}

# Query for Recipe Collection for home (index) page
# getRecipeIndex

query recipeIndex($where: RecipeFilter) {
  __typename
  recipeCollection(where: $where, order: title_ASC) {
    total
    items {
      ...RecipeSummary
    }
  }
}

# Query for Recipe page
# getRecipePage

query recipePage($where: RecipeFilter) {
  recipeCollection(where: $where, order: title_ASC, limit: 1) {
    __typename
    items {
      ...RecipeDefault
    }
  }

  categoriesTaxonomy: taxonomyCollection(
    where: { slug: "categories" }
    order: title_ASC
    limit: 1
  ) {
    ...SchemaTaxonomy
  }

  cuisineTaxonomy: taxonomyCollection(
    where: { slug: "cuisine" }
    order: title_ASC
    limit: 1
  ) {
    ...SchemaTaxonomy
  }
}

query recipeEntryQuery($id: String!) {
  recipe(id: $id) {
    sys {
      id
      publishedVersion
    }

    ingredientsList
    instructionsList
  }
}

# used for recipe content structure migration
query recipeCollectionQuery {
  recipeCollection {
    total
    items {
      sys {
        id
        publishedVersion
      }

      ingredientsList
      instructionsList
    }
  }
}
